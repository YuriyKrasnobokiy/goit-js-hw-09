{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaH,EAAKI,SAASC,MAC3BC,EAAiBN,EAAKI,SAASG,KAC/BC,EAAcR,EAAKI,SAASK,OACTR,SAASC,cAAc,UAE/BQ,iBAAiB,SAElC,SAAkBC,GAChBA,EAAMC,iBACN,IAAIC,EAAQC,OAAOX,EAAWY,OAC9BC,QAAQC,IAAIJ,GAIZ,IAHA,IAAMN,EAAOO,OAAOR,EAAeS,OAC7BN,EAASK,OAAON,EAAYO,OAEzBG,EAAI,EAAGA,EAAIT,EAAQS,GAAK,EAAG,CAIlCC,EAHeD,EACfL,GAASN,E,CAKX,SAASY,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,6CAERC,EAAO,yC,GAERN,E,IAGFQ,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAU1B,EAAKyB,EAALzB,MACjB2B,EAAAlC,GAASmC,OAAOC,QACd,uBAAwCC,OAAfJ,EAAS,QAAYI,OAAN9B,EAAM,M,IAGjD+B,OAAM,SAAAN,G,IAAGC,EAAQD,EAARC,SAAU1B,EAAKyB,EAALzB,MAClB2B,EAAAlC,GAASmC,OAAOI,QACd,sBAAqCF,OAAfJ,EAAS,QAAYI,OAAN9B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst inputDelay = form.elements.delay;\nconst inputDelayStep = form.elements.step;\nconst inputAmount = form.elements.amount;\nconst btnCreatePromise = document.querySelector('button');\n\nbtnCreatePromise.addEventListener('click', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  let delay = Number(inputDelay.value);\n  console.log(delay);\n  const step = Number(inputDelayStep.value);\n  const amount = Number(inputAmount.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    let position = i;\n    delay += step;\n\n    createPromise(position, delay);\n  }\n\n  function createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n    const promise = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve('Success! Value passed to resolve function');\n        } else {\n          reject('Error! Error passed to reject function');\n        }\n      }, delay);\n    });\n    promise\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$inputDelay","elements","delay","$ce04d3a99e08e73b$var$inputDelayStep","step","$ce04d3a99e08e73b$var$inputAmount","amount","addEventListener","event","preventDefault","delay1","Number","value","console","log","i","createPromise","position1","delay2","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","param","position","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.7908e92f.js.map"}